{{- range $key, $value := .Values.operators }}
{{- if eq ($value.enabled | toString) "true" }}
{{- if $value.kafkaconnect }}
{{- if $value.kafkaconnector }}
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: {{ $value.kafkaconnect.name | quote }}
  namespace: {{ $value.namespace.name | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ $value.syncwave | default "5" | quote }}
spec:
  lookupPolicy:
    local: false
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ $value.kafkaconnect.name }}
  namespace: {{ $value.namespace.name | quote }}
  annotations:
    strimzi.io/use-connector-resources: "true"
    argocd.argoproj.io/sync-wave: {{ $value.syncwave | default "6" | quote }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  replicas: {{ $value.kafkaconnect.replicas | default "1" }}
  bootstrapServers: {{ $value.kafka.name }}-kafka-bootstrap:9092
  config:
    group.id: {{ $value.kafkaconnect.name }}-group
    offset.storage.topic: {{ $value.kafkaconnect.name }}-offsets
    config.storage.topic: {{ $value.kafkaconnect.name }}-configs
    status.storage.topic: {{ $value.kafkaconnect.name }}-status
    config.storage.replication.factor: {{ $value.kafkaconnect.replication_factor | default "3" }}
    offset.storage.replication.factor: {{ $value.kafkaconnect.replication_factor | default "3" }}
    status.storage.replication.factor: {{ $value.kafkaconnect.replication_factor | default "3" }}
    config.providers: directory
    config.providers.directory.class: org.apache.kafka.common.config.provider.DirectoryConfigProvider
  authentication:
    type: scram-sha-512
    username: {{ $value.kafkaconnect.name }}
    passwordSecret:
      secretName: {{ $value.kafkaconnect.name }}
      password: password
  externalConfiguration:
    volumes:
      - name: connector-config
        secret:
          secretName: {{ $value.kafkaconnect.name }}
  build:
    output:
      type: imagestream
      image: {{ $value.kafkaconnect.name }}:latest
    plugins:
      - name: debezium-oracle-connector
        artifacts:
          - type: zip
            url: https://maven.repository.redhat.com/ga/io/debezium/debezium-connector-oracle/1.9.7.Final-redhat-00003/debezium-connector-oracle-1.9.7.Final-redhat-00003-plugin.zip
          - type: jar
            url: https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc8/21.7.0.0/ojdbc8-21.7.0.0.jar
  resources:
    requests:
      cpu: {{ $value.kafkaconnect.requests.cpu | default "1" | quote }}
      memory: {{ $value.kafkaconnect.requests.memory | default "3Gi" }}
    limits:
      cpu: {{ $value.kafkaconnect.limits.cpu | default "1" | quote }}
      memory: {{ $value.kafkaconnect.limits.memory | default "3Gi" }}
  jvmOptions:
    # spec.resourcesのメモリサイズの50%を指定
    "-Xmx": "1536m"
    "-Xms": "1536m"
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: connect-metrics
        key: metrics-config.yml
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: connect-metrics
  namespace: {{ $value.namespace.name | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ $value.syncwave | default "5" | quote }}
  labels:
    app: strimzi
data:
  metrics-config.yml: |
    # Inspired by kafka-connect rules
    # https://github.com/prometheus/jmx_exporter/blob/master/example_configs/kafka-connect.yml
    # See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    rules:
    #kafka.connect:type=app-info,client-id="{clientid}"
    #kafka.consumer:type=app-info,client-id="{clientid}"
    #kafka.producer:type=app-info,client-id="{clientid}"
    - pattern: 'kafka.(.+)<type=app-info, client-id=(.+)><>start-time-ms'
      name: kafka_$1_start_time_seconds
      labels:
        clientId: "$2"
      help: "Kafka $1 JMX metric start time seconds"
      type: GAUGE
      valueFactor: 0.001
    - pattern: 'kafka.(.+)<type=app-info, client-id=(.+)><>(commit-id|version): (.+)'
      name: kafka_$1_$3_info
      value: 1
      labels:
        clientId: "$2"
        $3: "$4"
      help: "Kafka $1 JMX metric info version and commit-id"
      type: GAUGE

    #kafka.producer:type=producer-topic-metrics,client-id="{clientid}",topic="{topic}"", partition="{partition}"
    #kafka.consumer:type=consumer-fetch-manager-metrics,client-id="{clientid}",topic="{topic}"", partition="{partition}"
    - pattern: kafka.(.+)<type=(.+)-metrics, client-id=(.+), topic=(.+), partition=(.+)><>(.+-total|compression-rate|.+-avg|.+-replica|.+-lag|.+-lead)
      name: kafka_$2_$6
      labels:
        clientId: "$3"
        topic: "$4"
        partition: "$5"
      help: "Kafka $1 JMX metric type $2"
      type: GAUGE

    #kafka.producer:type=producer-topic-metrics,client-id="{clientid}",topic="{topic}"
    #kafka.consumer:type=consumer-fetch-manager-metrics,client-id="{clientid}",topic="{topic}"", partition="{partition}"
    - pattern: kafka.(.+)<type=(.+)-metrics, client-id=(.+), topic=(.+)><>(.+-total|compression-rate|.+-avg)
      name: kafka_$2_$5
      labels:
        clientId: "$3"
        topic: "$4"
      help: "Kafka $1 JMX metric type $2"
      type: GAUGE

    #kafka.connect:type=connect-node-metrics,client-id="{clientid}",node-id="{nodeid}"
    #kafka.consumer:type=consumer-node-metrics,client-id=consumer-1,node-id="{nodeid}"
    - pattern: kafka.(.+)<type=(.+)-metrics, client-id=(.+), node-id=(.+)><>(.+-total|.+-avg)
      name: kafka_$2_$5
      labels:
        clientId: "$3"
        nodeId: "$4"
      help: "Kafka $1 JMX metric type $2"
      type: UNTYPED

    #kafka.connect:type=kafka-metrics-count,client-id="{clientid}"
    #kafka.consumer:type=consumer-fetch-manager-metrics,client-id="{clientid}"
    #kafka.consumer:type=consumer-coordinator-metrics,client-id="{clientid}"
    #kafka.consumer:type=consumer-metrics,client-id="{clientid}"
    - pattern: kafka.(.+)<type=(.+)-metrics, client-id=(.*)><>(.+-total|.+-avg|.+-bytes|.+-count|.+-ratio|.+-age|.+-flight|.+-threads|.+-connectors|.+-tasks|.+-ago)
      name: kafka_$2_$4
      labels:
        clientId: "$3"
      help: "Kafka $1 JMX metric type $2"
      type: GAUGE

    #kafka.connect:type=connector-metrics,connector="{connector}"
    - pattern: 'kafka.(.+)<type=connector-metrics, connector=(.+)><>(connector-class|connector-type|connector-version|status): (.+)'
      name: kafka_connect_connector_$3
      value: 1
      labels:
        connector: "$2"
        $3: "$4"
      help: "Kafka Connect $3 JMX metric type connector"
      type: GAUGE

    #kafka.connect:type=connector-task-metrics,connector="{connector}",task="{task}<> status"
    - pattern: 'kafka.connect<type=connector-task-metrics, connector=(.+), task=(.+)><>status: ([a-z-]+)'
      name: kafka_connect_connector_task_status
      value: 1
      labels:
        connector: "$1"
        task: "$2"
        status: "$3"
      help: "Kafka Connect JMX Connector task status"
      type: GAUGE

    #kafka.connect:type=task-error-metrics,connector="{connector}",task="{task}"
    #kafka.connect:type=source-task-metrics,connector="{connector}",task="{task}"
    #kafka.connect:type=sink-task-metrics,connector="{connector}",task="{task}"
    #kafka.connect:type=connector-task-metrics,connector="{connector}",task="{task}"
    - pattern: kafka.connect<type=(.+)-metrics, connector=(.+), task=(.+)><>(.+-total|.+-count|.+-ms|.+-ratio|.+-avg|.+-failures|.+-requests|.+-timestamp|.+-logged|.+-errors|.+-retries|.+-skipped)
      name: kafka_connect_$1_$4
      labels:
        connector: "$2"
        task: "$3"
      help: "Kafka Connect JMX metric type $1"
      type: GAUGE

    #kafka.connect:type=connector-metrics,connector="{connector}"
    #kafka.connect:type=connect-worker-metrics,connector="{connector}"
    - pattern: kafka.connect<type=connect-worker-metrics, connector=(.+)><>([a-z-]+)
      name: kafka_connect_worker_$2
      labels:
        connector: "$1"
      help: "Kafka Connect JMX metric $1"
      type: GAUGE

    #kafka.connect:type=connect-worker-metrics
    - pattern: kafka.connect<type=connect-worker-metrics><>([a-z-]+)
      name: kafka_connect_worker_$1
      help: "Kafka Connect JMX metric worker"
      type: GAUGE

    #kafka.connect:type=connect-worker-rebalance-metrics
    - pattern: kafka.connect<type=connect-worker-rebalance-metrics><>([a-z-]+)
      name: kafka_connect_worker_rebalance_$1
      help: "Kafka Connect JMX metric rebalance information"
      type: GAUGE
{{- end }}
{{- end }}
{{- end }}
{{- end }}